version: '3.8'

services:
  # PHP Service
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: rvtgtr-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./docker/php/conf.d/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    env_file:
      - ./backend/.env
    environment:
      - DB_HOST=db
      - DB_DATABASE=${DB_DATABASE:-rvtgtr}
      - DB_USERNAME=${DB_USERNAME:-root}
      - DB_PASSWORD=${DB_PASSWORD:-secret}
      - REDIS_HOST=redis
      - APP_URL=http://64.227.105.115
      - FRONTEND_URL=http://64.227.105.115:5173
    depends_on:
      - db
      - redis
    networks:
      - rvtgtr-network
  # Nginx Service
  webserver:
    image: nginx:alpine
    container_name: rvtgtr-webserver
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/
    depends_on:
      - app
    networks:
      - rvtgtr-network

  # MySQL Service
  db:
    image: mysql:8.0
    container_name: rvtgtr-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-rvtgtr}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
      MYSQL_USER: ${DB_USERNAME:-rvtgtr_user}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql/
    networks:
      - rvtgtr-network

  # Node Service for frontend
  node:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: rvtgtr-node
    volumes:
      - ./frontend:/app
      - /app/node_modules
    working_dir: /app
    networks:
      - rvtgtr-network
    ports:
      - "5173:5173"
    depends_on:
      - app

  # Redis Service
  redis:
    image: redis:alpine
    container_name: rvtgtr-redis
    ports:
      - "6379:6379"
    networks:
      - rvtgtr-network

networks:
  rvtgtr-network:
    driver: bridge

volumes:
  dbdata:
    driver: local
